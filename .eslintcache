[{"C:\\Users\\SOURASISH\\Desktop\\Sorting Visualizer\\searching\\src\\App.js":"1","C:\\Users\\SOURASISH\\Desktop\\Sorting Visualizer\\searching\\src\\index.js":"2","C:\\Users\\SOURASISH\\Desktop\\Sorting Visualizer\\searching\\src\\SearchingAlgorithms\\LinearSearch\\linearSearch.js":"3","C:\\Users\\SOURASISH\\Desktop\\Sorting Visualizer\\searching\\src\\Others\\RandomIntFromInterval.js":"4","C:\\Users\\SOURASISH\\Desktop\\Sorting Visualizer\\searching\\src\\SearchingAlgorithms\\SearchingAlgorithms.js":"5","C:\\Users\\SOURASISH\\Desktop\\Sorting Visualizer\\searching\\src\\Others\\SearchDescription.js":"6","C:\\Users\\SOURASISH\\Desktop\\Sorting Visualizer\\searching\\src\\Others\\HeaderComponent.js":"7","C:\\Users\\SOURASISH\\Desktop\\Sorting Visualizer\\searching\\src\\arrayBox.js":"8","C:\\Users\\SOURASISH\\Desktop\\Sorting Visualizer\\searching\\src\\SearchingAlgorithms\\BinarySearch\\binarySearch.js":"9","C:\\Users\\SOURASISH\\Desktop\\Sorting Visualizer\\searching\\src\\Others\\FooterComponent.js":"10","C:\\Users\\SOURASISH\\Desktop\\Sorting Visualizer\\searching\\src\\Others\\NavbarComponent.js":"11","C:\\Users\\SOURASISH\\Desktop\\Sorting Visualizer\\searching\\src\\SortingAlgorithms\\BubbleSort\\bubbleSort.js":"12","C:\\Users\\SOURASISH\\Desktop\\Sorting Visualizer\\searching\\src\\SortingAlgorithms\\sortingAlgorithms.js":"13","C:\\Users\\SOURASISH\\Desktop\\Sorting Visualizer\\searching\\src\\SortingAlgorithms\\SelectionSort\\selectionSort.js":"14","C:\\Users\\SOURASISH\\Desktop\\Sorting Visualizer\\searching\\src\\SortingAlgorithms\\BubbleSort\\bubbleSortAnimation.js":"15","C:\\Users\\SOURASISH\\Desktop\\Sorting Visualizer\\searching\\src\\SortingAlgorithms\\SelectionSort\\selectionSortAnimation.js":"16"},{"size":1033,"mtime":1610696446408,"results":"17","hashOfConfig":"18"},{"size":352,"mtime":1608715655301,"results":"19","hashOfConfig":"18"},{"size":8876,"mtime":1609145854275,"results":"20","hashOfConfig":"18"},{"size":114,"mtime":1608714210174,"results":"21","hashOfConfig":"18"},{"size":1093,"mtime":1609057764593,"results":"22","hashOfConfig":"18"},{"size":649,"mtime":1610699481810,"results":"23","hashOfConfig":"18"},{"size":405,"mtime":1608803475395,"results":"24","hashOfConfig":"18"},{"size":366,"mtime":1608883671988,"results":"25","hashOfConfig":"18"},{"size":11471,"mtime":1609145918485,"results":"26","hashOfConfig":"18"},{"size":2961,"mtime":1609092535052,"results":"27","hashOfConfig":"18"},{"size":1564,"mtime":1610612171465,"results":"28","hashOfConfig":"18"},{"size":8704,"mtime":1610906715683,"results":"29","hashOfConfig":"18"},{"size":2090,"mtime":1610698770740,"results":"30","hashOfConfig":"18"},{"size":9048,"mtime":1610906755449,"results":"31","hashOfConfig":"18"},{"size":6776,"mtime":1610904895996,"results":"32","hashOfConfig":"18"},{"size":7283,"mtime":1610906258598,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nl33ak",{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\SOURASISH\\Desktop\\Sorting Visualizer\\searching\\src\\App.js",[],"C:\\Users\\SOURASISH\\Desktop\\Sorting Visualizer\\searching\\src\\index.js",["71"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport { HashRouter as Router, BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <BrowserRouter>\n     <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n\n",["72","73"],"C:\\Users\\SOURASISH\\Desktop\\Sorting Visualizer\\searching\\src\\SearchingAlgorithms\\LinearSearch\\linearSearch.js",[],"C:\\Users\\SOURASISH\\Desktop\\Sorting Visualizer\\searching\\src\\Others\\RandomIntFromInterval.js",[],["74","75"],"C:\\Users\\SOURASISH\\Desktop\\Sorting Visualizer\\searching\\src\\SearchingAlgorithms\\SearchingAlgorithms.js",[],"C:\\Users\\SOURASISH\\Desktop\\Sorting Visualizer\\searching\\src\\Others\\SearchDescription.js",["76"],"C:\\Users\\SOURASISH\\Desktop\\Sorting Visualizer\\searching\\src\\Others\\HeaderComponent.js",[],"C:\\Users\\SOURASISH\\Desktop\\Sorting Visualizer\\searching\\src\\arrayBox.js",[],"C:\\Users\\SOURASISH\\Desktop\\Sorting Visualizer\\searching\\src\\SearchingAlgorithms\\BinarySearch\\binarySearch.js",["77","78"],"import React, { Component } from 'react';\r\nimport ArrayBox from '../../arrayBox';\r\nimport HeaderComponent from '../../Others/HeaderComponent';\r\nimport { randomIntFromInterval } from '../../Others/RandomIntFromInterval';\r\nimport { binarySearchAnimations } from '../SearchingAlgorithms';\r\n\r\nimport image from \"../../Images/binary_search.gif\";\r\n\r\n\r\nimport \"./binarySearch.css\"\r\nimport SearchDescription from '../../Others/SearchDescription';\r\n\r\nconst NUMBER_OF_ARRAY_BARS = 10;\r\nconst DEFAULT_COLOR = \"#00FFFF\";\r\nconst FOUND_COLOR = \"#00FF00\";\r\nconst NOT_FOUND_COLOR = \"#008B8B\";\r\nconst ANIMATION_SPEED_SECONDS = 1;\r\n\r\nclass BinarySearch extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            array: [],\r\n            found: false,\r\n            disabled: false,\r\n            elementFoundAt: 0,\r\n            target: null,\r\n            msgAfterExecution: null,\r\n            previousLength: 0,\r\n            animations: [], \r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.resetArray();\r\n    }\r\n\r\n    resetArray(){\r\n        let array = [];\r\n        const prevArray = document.getElementsByClassName(\"b-array-bar\");\r\n        document.getElementById(\"target\").value =\"\";\r\n        for(let i = 0;i<prevArray.length;i++){\r\n            prevArray[i].style.backgroundColor = DEFAULT_COLOR;\r\n            prevArray[i].classList.remove(\"growFind\");\r\n            prevArray[i].classList.remove(\"highlight\");\r\n        }\r\n\r\n        for (let i=0; i< NUMBER_OF_ARRAY_BARS;i++){\r\n            array.push(randomIntFromInterval(5,850));\r\n        }\r\n        let sortedArray = array.slice().sort((a,b) => a-b);\r\n        this.setState({\r\n            array: sortedArray,\r\n            found: false,\r\n            disabled: false,\r\n            msgAfterExecution: null,\r\n            previousLength: this.state.animations.length\r\n        });\r\n    }\r\n\r\n    resetAllTiles(arrayTiles){\r\n        for( let i=0;i<arrayTiles.length;i++){\r\n            arrayTiles[i].style.backgroundColor = DEFAULT_COLOR;\r\n            arrayTiles[i].style.transition = \"100ms all\";\r\n        }\r\n    }\r\n\r\n    highlightWithinBounds(start, end, arrayTiles) {\r\n        for(let i = start; i <= end ; i++){\r\n            arrayTiles[i].style.backgroundColor = NOT_FOUND_COLOR;\r\n            arrayTiles[i].style.transition = \"100ms all\";\r\n        }\r\n    }\r\n\r\n    binarySearch(){\r\n        //console.log(\"clicked\");\r\n        const { array } = this.state;\r\n        const animations = [];\r\n        let count =0;\r\n        const arrayTiles = document.getElementsByClassName(\"b-array-bar\");\r\n        const target = document.getElementById(\"target\").value;\r\n        if(target === \"\") return;\r\n        var message = '';\r\n        //console.log(target);\r\n        binarySearchAnimations(\r\n            array,\r\n            0,\r\n            array.length - 1,\r\n            parseInt(target),\r\n            animations\r\n        );\r\n        for(let i=0; i < animations.length; i++){\r\n            const [left, right, mid, found] = animations[i];\r\n            console.log(animations[i]);\r\n            count++;\r\n            if( i === animations.length - 1 && found){\r\n                setTimeout(()=> {\r\n                    message = `${target} found at position ${mid}`;\r\n                    this.setState({\r\n                        //msgAfterExecution:`${target} found at position ${mid} `,\r\n                        disabled: true,\r\n                        found: true\r\n                    });\r\n                    this.resetAllTiles(arrayTiles);\r\n                    arrayTiles[mid].classList.add(\"highlight\");\r\n                    arrayTiles[mid].style.backgroundColor = FOUND_COLOR;\r\n\r\n                }, (i+1) * ANIMATION_SPEED_SECONDS * 1000);\r\n            }\r\n\r\n            if(left === mid && !found ) {\r\n                setTimeout(() => {\r\n                    //console.log(\"set state invoked\");\r\n                    message = `${target} not found`;\r\n                    this.setState({\r\n                        //msgAfterExecution: `${target} not found`,\r\n                        found: false,\r\n                    });\r\n                    this.resetAllTiles(arrayTiles);\r\n                }, (i+1) * ANIMATION_SPEED_SECONDS * 1000);\r\n            }\r\n\r\n            setTimeout(()=> {\r\n                this.setState({ disabled: true });\r\n                this.resetAllTiles(arrayTiles);\r\n                this.highlightWithinBounds(left, right, arrayTiles);\r\n\r\n            }, i*ANIMATION_SPEED_SECONDS*1000);\r\n        }\r\n\r\n        setTimeout(() => {\r\n            this.setState({\r\n                msgAfterExecution: message,\r\n                disabled: false});\r\n\r\n        }, count * ANIMATION_SPEED_SECONDS * 1000);\r\n\r\n    }\r\n    state = {  }\r\n    render() { \r\n\r\n        const { array, found, disabled, msgAfterExecution } = this.state;\r\n\r\n        //console.log(found);\r\n        return ( \r\n            <div>\r\n                <div className=\"jumbotron jumbotron-fluid bg-light\">\r\n                    <HeaderComponent name = \"Binary Search\"/>\r\n                    <center>\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n\r\n                                <div className=\"col-sm-1\">\r\n\r\n                                </div>\r\n                                <div className=\"col-sm-10 input-group\">\r\n                                    <input type=\"number\" id=\"target\" className=\"form-control form-control-lg\" placeholder=\"Type the element to find\"/>\r\n                                    <div className=\"input-group-append\">\r\n                                        <button \r\n                                        onClick={() => this.binarySearch()}\r\n                                        className=\"btn btn-success btn-lg\" type=\"button\"\r\n                                        disabled = {disabled} >\r\n                                            Search\r\n                                        </button>\r\n                                        <button onClick={() => this.resetArray()} className=\"btn btn-danger btn-lg \" type=\"button\" disabled={disabled}>\r\n                                            Reset Array\r\n                                        </button>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-sm-1\">\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        {\r\n                            !found ? (\r\n                                <p className=\"not-found\"> {msgAfterExecution}\r\n                                \r\n                                </p>\r\n                            ) : (\r\n                                <p className=\"found\">{msgAfterExecution}</p>\r\n                            )\r\n                        }\r\n                        \r\n                        <div className=\"container\">\r\n                            {\r\n                                array.map((value, idx) => (\r\n                                    <ArrayBox\r\n                                    type={\"binarySearch\"}\r\n                                    key={idx}\r\n                                    idx= {idx}\r\n                                    val={value}\r\n                                    />\r\n                                ))\r\n                            }\r\n\r\n                        </div>\r\n                    </center>\r\n\r\n                </div>\r\n\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-12\">\r\n                            <SearchDescription image = {image} name = \"Binary Search\" description = {`Binary search algorithm works on the principle of divide and conquer. For this algorithm to work properly, the data collection should be in the sorted form. Binary search looks for a particular item by comparing the middle most item of the collection. If a match occurs, then the index of item is returned. If the middle item is greater than the item, then the item is searched in the sub-array to the left of the middle item. Otherwise, the item is searched for in the sub-array to the right of the middle item. This process continues on the sub-array as well until the size of the subarray reduces to zero.`}/>\r\n                            \r\n\r\n                        </div>\r\n                        <div className=\"col-sm-12\">\r\n                        <div class=\"alert alert-danger text-center\" role=\"alert\">\r\n                            <h5>Time Complexity: O(log n)</h5>\r\n                            <h5>Space Complexity: O(1)</h5>\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"col-sm-6\">\r\n                        <div class=\"alert alert-primary\" role=\"alert\">\r\n                            <h5>Algorithm</h5>\r\n                            <pre className=\"mt-4\">\r\n                            {`Step 1 - Read the search element from the user.\r\n\r\nStep 2 - Find the middle element in the sorted list.\r\n\r\nStep 3 - Compare the search element with the middle\r\n         element in the sorted list.\r\nStep 4 - If both are matched, then display \"Given\r\n         element is found!!!\" and terminate the \r\n         function.\r\nStep 5 - If both are not matched, then check whether\r\n         the search element is smaller or larger than \r\n         the middle element.\r\nStep 6 - If the search element is smaller than middle\r\n         element, repeat steps 2, 3, 4 and 5 for \r\n         the left sublist of the middle element.\r\nStep 7 - If the search element is larger than middle\r\n         element, repeat steps 2, 3, 4 and 5 for \r\n         the right sublist of the middle element.\r\nStep 8 - Repeat the same process until we find the\r\n         search element in the list or until sublist\r\n         contains only one element.\r\nStep 9 - If that element also doesn't match with the\r\n         search element, then display \"Element is\r\n         not found in the list!!!\" and terminate the \r\n         function.`}\r\n                            </pre>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"col-sm-6\">\r\n                        <div class=\"alert alert-warning\" role=\"alert\">\r\n                        <h5>Pseudocode</h5>\r\n                        \r\n                        <pre className=\"mt-4\">\r\n                            {\r\n                        `Procedure binary_search\r\n    A ← sorted array\r\n    n ← size of array\r\n    x ← value to be searched\r\n                     \r\n    Set lowerBound = 1\r\n    Set upperBound = n \r\n                     \r\n    while x not found\r\n        if upperBound < lowerBound \r\n            EXIT: x does not exists.\r\n                        \r\n        set midPoint = lowerBound + (upperBound - lowerBound)/2\r\n                           \r\n        if A[midPoint] < x\r\n            set lowerBound = midPoint + 1\r\n                              \r\n        if A[midPoint] > x\r\n            set upperBound = midPoint - 1 \r\n                     \r\n        if A[midPoint] = x \r\n            EXIT: x found at location midPoint\r\n    end while\r\n                        \r\nend procedure`\r\n                            }\r\n                        </pre>\r\n                        </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default BinarySearch;","C:\\Users\\SOURASISH\\Desktop\\Sorting Visualizer\\searching\\src\\Others\\FooterComponent.js",["79","80","81","82","83"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nclass FooterComponent extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <footer>\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-4 footer-column\">\r\n        <ul class=\"nav flex-column\">\r\n            \r\n          <li class=\"nav-item mb-2\">\r\n            <span class=\"footer-title\">Searching Algorithms</span>\r\n          </li>\r\n          \r\n          <li class=\"nav-item\">\r\n            <Link to=\"/linearsearch\">Linear Search</Link>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <Link to=\"/binarysearch\">Binary Search</Link>\r\n          </li>\r\n          \r\n        </ul>\r\n      </div>\r\n      <div class=\"col-md-4 footer-column\">\r\n        <ul class=\"nav flex-column\">\r\n          <li class=\"nav-item mb-2\">\r\n            <span class=\"footer-title\">Sorting Algorithms</span>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <Link to=\"/bubblesort\">Bubble Sort</Link>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <Link to=\"/selectionsort\">Selection Sort</Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"col-md-4 footer-column\">\r\n        <ul class=\"nav flex-column\">\r\n          <li class=\"nav-item mb-2\">\r\n            <span class=\"footer-title\">Contact & Support</span>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <span class=\"nav-link\"><i class=\"fas fa-phone\"></i>+91 9870345816</span>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            \r\n            <span class=\"nav-link\"><i class=\"fab fa-whatsapp fa-lg\"></i> +91 8959001820</span>\r\n          </li>\r\n          \r\n        </ul>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"text-center\"><i class=\"fas fa-ellipsis-h\"></i></div>\r\n    \r\n    <div class=\"row text-center\">\r\n      <div class=\"col-md-4 box\">\r\n        <span class=\"copyright quick-links\">Copyright &nbsp; &copy; AlgoExpert &nbsp;2020 \r\n        </span>\r\n      </div>\r\n      <div class=\"col-md-4 box\">\r\n        <ul class=\"list-inline social-buttons\">\r\n          <li class=\"list-inline-item\">\r\n            <a href=\"#\">\r\n            <i class=\"fab fa-youtube\"></i>\r\n          </a>\r\n          </li>\r\n          <li class=\"list-inline-item\">\r\n            <a href=\"#\">\r\n            <i class=\"fab fa-github\"></i>\r\n          </a>\r\n          </li>\r\n          <li class=\"list-inline-item\">\r\n            <a href=\"#\">\r\n            <i class=\"fab fa-linkedin-in\"></i>\r\n          </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"col-md-4 box\">\r\n        <ul class=\"list-inline quick-links\">\r\n          <li class=\"list-inline-item\">\r\n            <a href=\"#\">Privacy Policy</a>\r\n          </li>\r\n          <li class=\"list-inline-item\">\r\n            <a href=\"#\">Terms of Use</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</footer>\r\n         );\r\n    }\r\n}\r\n \r\nexport default FooterComponent;","C:\\Users\\SOURASISH\\Desktop\\Sorting Visualizer\\searching\\src\\Others\\NavbarComponent.js",["84","85","86","87","88","89"],"C:\\Users\\SOURASISH\\Desktop\\Sorting Visualizer\\searching\\src\\SortingAlgorithms\\BubbleSort\\bubbleSort.js",["90"],"C:\\Users\\SOURASISH\\Desktop\\Sorting Visualizer\\searching\\src\\SortingAlgorithms\\sortingAlgorithms.js",[],"C:\\Users\\SOURASISH\\Desktop\\Sorting Visualizer\\searching\\src\\SortingAlgorithms\\SelectionSort\\selectionSort.js",["91","92","93"],"C:\\Users\\SOURASISH\\Desktop\\Sorting Visualizer\\searching\\src\\SortingAlgorithms\\BubbleSort\\bubbleSortAnimation.js",[],"C:\\Users\\SOURASISH\\Desktop\\Sorting Visualizer\\searching\\src\\SortingAlgorithms\\SelectionSort\\selectionSortAnimation.js",["94","95"],{"ruleId":"96","severity":1,"message":"97","line":6,"column":24,"nodeType":"98","messageId":"99","endLine":6,"endColumn":30},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"100","replacedBy":"104"},{"ruleId":"102","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":14,"column":17,"nodeType":"108","endLine":14,"endColumn":88},{"ruleId":"109","severity":1,"message":"110","line":97,"column":28,"nodeType":"111","messageId":"112","endLine":108,"endColumn":18},{"ruleId":"109","severity":1,"message":"110","line":112,"column":28,"nodeType":"111","messageId":"112","endLine":120,"endColumn":18},{"ruleId":"113","severity":1,"message":"114","line":66,"column":13,"nodeType":"108","endLine":66,"endColumn":25},{"ruleId":"113","severity":1,"message":"114","line":71,"column":13,"nodeType":"108","endLine":71,"endColumn":25},{"ruleId":"113","severity":1,"message":"114","line":76,"column":13,"nodeType":"108","endLine":76,"endColumn":25},{"ruleId":"113","severity":1,"message":"114","line":85,"column":13,"nodeType":"108","endLine":85,"endColumn":25},{"ruleId":"113","severity":1,"message":"114","line":88,"column":13,"nodeType":"108","endLine":88,"endColumn":25},{"ruleId":"113","severity":1,"message":"114","line":12,"column":3,"nodeType":"108","endLine":12,"endColumn":36},{"ruleId":"113","severity":1,"message":"115","line":22,"column":9,"nodeType":"108","endLine":22,"endColumn":29},{"ruleId":"113","severity":1,"message":"115","line":27,"column":9,"nodeType":"108","endLine":27,"endColumn":29},{"ruleId":"113","severity":1,"message":"115","line":31,"column":9,"nodeType":"108","endLine":31,"endColumn":29},{"ruleId":"113","severity":1,"message":"115","line":35,"column":9,"nodeType":"108","endLine":35,"endColumn":29},{"ruleId":"113","severity":1,"message":"115","line":39,"column":9,"nodeType":"108","endLine":39,"endColumn":29},{"ruleId":"96","severity":1,"message":"116","line":58,"column":15,"nodeType":"98","messageId":"99","endLine":58,"endColumn":18},{"ruleId":"96","severity":1,"message":"117","line":5,"column":10,"nodeType":"98","messageId":"99","endLine":5,"endColumn":33},{"ruleId":"96","severity":1,"message":"118","line":8,"column":7,"nodeType":"98","messageId":"99","endLine":8,"endColumn":20},{"ruleId":"96","severity":1,"message":"116","line":56,"column":15,"nodeType":"98","messageId":"99","endLine":56,"endColumn":18},{"ruleId":"96","severity":1,"message":"119","line":60,"column":29,"nodeType":"98","messageId":"99","endLine":60,"endColumn":37},{"ruleId":"96","severity":1,"message":"120","line":62,"column":29,"nodeType":"98","messageId":"99","endLine":62,"endColumn":46},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-native-reassign",["121"],"no-negated-in-lhs",["122"],["121"],["122"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'message'.","ArrowFunctionExpression","unsafeRefs","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'len' is assigned a value but never used.","'getBubbleSortAnimations' is defined but never used.","'PRIMARY_COLOR' is assigned a value but never used.","'element1' is assigned a value but never used.","'lowestElementHtml' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]